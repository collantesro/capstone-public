@page

@model CCSInventory.Pages.Agencies.CreateModel

@{
    ViewData["Title"] = "Create Donor/Recipient";
}

@section includes {
    <partial name="_ValidationScriptsPartial"/>
}

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Agency.AgencyName" class="control-label">Agency Name</label>
                <input asp-for="Agency.AgencyName" class="form-control" />
                <span asp-validation-for="Agency.AgencyName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Agency.PhoneNumber" class="control-label">Phone Number (optional)</label>
                <input asp-for="Agency.PhoneNumber" class="form-control phoneNumber" maxlength="16" />
                <span asp-validation-for="Agency.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Agency.EmailAddress" class="control-label">Email Address (optional)</label>
                <input asp-for="Agency.EmailAddress" class="form-control" />
                <span asp-validation-for="Agency.EmailAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Agency.AgencyNote" class="control-label">Agency Note (optional)</label>
                <input asp-for="Agency.AgencyNote" class="form-control" />
                <span asp-validation-for="Agency.AgencyNote" class="text-danger"></span>
            </div>

            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" asp-for="Agency.HasAddress" checked id="hasAddress" onclick="toggle_visibility('addressFields')">
                        Add an Address
                    </label>
                </div>
            </div>

            <script>
                function toggle_visibility(id) {
                    var e = document.getElementById(id);
                    if (e.style.display == 'block')
                        e.style.display = 'block';
                    if (e.style.display == 'none')
                        e.style.display = 'block';
                    else
                        e.style.display = 'none';

                }
            </script>

            <div id="addressFields">
                <h3>Address</h3>
                <div class="form-group">
                    <label asp-for="Agency.Address.StreetAddress1" class="control-label">Street Address 1</label>
                    <input asp-for="Agency.Address.StreetAddress1" class="form-control" />
                    <span asp-validation-for="Agency.Address.StreetAddress1" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Agency.Address.StreetAddress2" class="control-label">Street Address 2</label>
                    <input asp-for="Agency.Address.StreetAddress2" class="form-control" />
                    <span asp-validation-for="Agency.Address.StreetAddress2" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Agency.Address.City" class="control-label">City</label>
                    <input asp-for="Agency.Address.City" class="form-control" />
                    <span asp-validation-for="Agency.Address.City" class="text-danger"></span>
                </div>


                <div class="form-group">
                    <label asp-for="Agency.Address.State" class="control-label">State</label>
                    <select asp-for="Agency.Address.State" value="UT" class="form-control" asp-items="@ViewBag.States">
                        <option selected="selected" value="UT">Utah</option>
                    </select>
                    <span asp-validation-for="Agency.Address.State" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Agency.Address.Zip" class="control-label">Zip</label>
                    <input asp-for="Agency.Address.Zip" class="form-control" />
                    <span asp-validation-for="Agency.Address.Zip" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

<script>
    const isNumericInput = (event) => {
        const key = event.keyCode;
        return ((key >= 48 && key <= 57) || // Allow number line
            (key >= 96 && key <= 105) // Allow number pad
        );
    };

    const isModifierKey = (event) => {
        const key = event.keyCode;
        return (event.shiftKey === true || key === 35 || key === 36) || // Allow Shift, Home, End
            (key === 8 || key === 9 || key === 13 || key === 46) || // Allow Backspace, Tab, Enter, Delete
            (key > 36 && key < 41) || // Allow left, up, right, down
            (
                // Allow Ctrl/Command + A,C,V,X,Z
                (event.ctrlKey === true || event.metaKey === true) &&
                (key === 65 || key === 67 || key === 86 || key === 88 || key === 90)
            )
    };

    const enforceFormat = (event) => {
        // Input must be of a valid number format or a modifier key, and not longer than ten digits
        if (!isNumericInput(event) && !isModifierKey(event)) {
            event.preventDefault();
        }
    };

    const formatToPhone = (event) => {
        if (isModifierKey(event)) { return; }

        // I am lazy and don't like to type things more than once
        const target = event.target;
        const input = event.target.value.replace(/\D/g, '').substring(0, 10); // First ten digits of input only
        const zip = input.substring(0, 3);
        const middle = input.substring(3, 6);
        const last = input.substring(6, 10);

        if (input.length > 6) { target.value = `(${zip}) ${middle} - ${last}`; }
        else if (input.length > 3) { target.value = `(${zip}) ${middle}`; }
        else if (input.length > 0) { target.value = `(${zip}`; }
    };

    const inputElement = document.querySelector('.phoneNumber');
    inputElement.addEventListener('keydown', enforceFormat);
    inputElement.addEventListener('keyup', formatToPhone);
</script>
