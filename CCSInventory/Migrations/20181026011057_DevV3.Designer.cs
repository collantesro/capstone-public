// <auto-generated />
using System;
using CCSInventory.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CCSInventory.Migrations
{
    [DbContext(typeof(CCSDbContext))]
    [Migration("20181026011057_DevV3")]
    partial class DevV3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("CCSInventory.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Note");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("StreetAddress1")
                        .IsRequired();

                    b.Property<string>("StreetAddress2");

                    b.Property<string>("Zip")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CCSInventory.Models.Agency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressID");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("IsArchived");

                    b.Property<int?>("MailingAddressID");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ID");

                    b.HasAlternateKey("Name");

                    b.HasIndex("AddressID");

                    b.HasIndex("MailingAddressID");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("CCSInventory.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.HasKey("ID");

                    b.HasAlternateKey("Name");

                    b.ToTable("Categories");

                    b.HasData(
                        new { ID = 1, Created = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), CreatedBy = "Seeded Data", Modified = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), ModifiedBy = "Seeded Data", Name = "Dry Goods" },
                        new { ID = 2, Created = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), CreatedBy = "Seeded Data", Modified = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), ModifiedBy = "Seeded Data", Name = "Perishable" },
                        new { ID = 3, Created = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), CreatedBy = "Seeded Data", Modified = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), ModifiedBy = "Seeded Data", Name = "Non-Food" }
                    );
                });

            modelBuilder.Entity("CCSInventory.Models.Container", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BinNumber");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Note");

                    b.Property<int>("SubcategoryID");

                    b.Property<decimal>("Weight");

                    b.HasKey("ID");

                    b.HasIndex("SubcategoryID");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("CCSInventory.Models.PantryPackTransaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Note");

                    b.Property<int>("PackTypeID");

                    b.Property<int>("Qty");

                    b.HasKey("ID");

                    b.HasIndex("PackTypeID");

                    b.ToTable("PantryPackTransactions");
                });

            modelBuilder.Entity("CCSInventory.Models.PantryPackType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.HasKey("ID");

                    b.HasAlternateKey("Name");

                    b.ToTable("PantryPackType");

                    b.HasData(
                        new { ID = 1, Created = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), CreatedBy = "Seeded Data", Modified = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), ModifiedBy = "Seeded Data", Name = "Generic" }
                    );
                });

            modelBuilder.Entity("CCSInventory.Models.Subcategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryID");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.HasKey("ID");

                    b.HasAlternateKey("Name");

                    b.HasIndex("CategoryID");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new { ID = 1, CategoryID = 1, Created = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), CreatedBy = "Seeded Data", Modified = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), ModifiedBy = "Seeded Data", Name = "Unsorted (Dry Goods)" },
                        new { ID = 2, CategoryID = 2, Created = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), CreatedBy = "Seeded Data", Modified = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), ModifiedBy = "Seeded Data", Name = "Unsorted (Perishable)" },
                        new { ID = 3, CategoryID = 3, Created = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), CreatedBy = "Seeded Data", Modified = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), ModifiedBy = "Seeded Data", Name = "Unsorted (Non-Food)" }
                    );
                });

            modelBuilder.Entity("CCSInventory.Models.Template", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Data")
                        .IsRequired();

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("CCSInventory.Models.Transaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AgencyID");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsOutgoing");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.HasKey("ID");

                    b.HasIndex("AgencyID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CCSInventory.Models.TransactionLineItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("IsTaxable");

                    b.Property<bool>("IsUSDA");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Note");

                    b.Property<int>("SubcategoryID");

                    b.Property<int>("TransactionID");

                    b.Property<decimal>("Weight");

                    b.HasKey("ID");

                    b.HasIndex("SubcategoryID");

                    b.HasIndex("TransactionID");

                    b.ToTable("TransactionLineItems");
                });

            modelBuilder.Entity("CCSInventory.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<DateTime>("Modified");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Note");

                    b.Property<string>("PasswordHash");

                    b.Property<int>("Role");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasAlternateKey("UserName");

                    b.HasIndex("UserName");

                    b.ToTable("Users");

                    b.HasData(
                        new { ID = 1, Created = new DateTime(2018, 10, 18, 12, 30, 18, 51, DateTimeKind.Utc), CreatedBy = "Seeded Data", FirstName = "Weber", LastName = "CS", Modified = new DateTime(2018, 10, 24, 18, 3, 0, 0, DateTimeKind.Utc), ModifiedBy = "Seeded Data", Note = "Default user for an empty database", PasswordHash = "$2a$10$/n.xV7jA5piJOZmfbT270eAKstycJ9WHqfpSttqz25ARWwnyLCyhu", Role = 3, UserName = "skram" }
                    );
                });

            modelBuilder.Entity("CCSInventory.Models.Agency", b =>
                {
                    b.HasOne("CCSInventory.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CCSInventory.Models.Address", "MailingAddress")
                        .WithMany()
                        .HasForeignKey("MailingAddressID");
                });

            modelBuilder.Entity("CCSInventory.Models.Container", b =>
                {
                    b.HasOne("CCSInventory.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CCSInventory.Models.PantryPackTransaction", b =>
                {
                    b.HasOne("CCSInventory.Models.PantryPackType", "PackType")
                        .WithMany()
                        .HasForeignKey("PackTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CCSInventory.Models.Subcategory", b =>
                {
                    b.HasOne("CCSInventory.Models.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CCSInventory.Models.Transaction", b =>
                {
                    b.HasOne("CCSInventory.Models.Agency", "Agency")
                        .WithMany()
                        .HasForeignKey("AgencyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CCSInventory.Models.TransactionLineItem", b =>
                {
                    b.HasOne("CCSInventory.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CCSInventory.Models.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
